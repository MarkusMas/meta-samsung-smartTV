{ "name":"smartTV (2016)", 
  "manufacturer":"Samsung",
  "type":"TV",
  "version":5,
  "compatible-meta":"1.1.1",
  "persistedvariables":{
    "ToInitiate":true,
    "IsRegistered": false,
    "MyDevices":"[]"
  },
  "variables":{
	  "NewDevice":"[]",
	  "DeviceURI": "",
    "DevicePort":8001,
    "CheckNew":true
  },
  "register":{
    "registerheadertext": "Samsung smartTV (2016)",
    "registerdescription": "Please enter the IP address of your device. \n For example: 192.168.178.1 \n Make shure the TV is powered on before proceeding! \n After clicking on \"Verify\", all known devices will be listed. Including any new device that is entered here.",
    "command": {"type": "static", "command": ".", "queryresult": "$.*"}        
  },
  "buttons":{
    "__CHECK":  {"label":"",
      "type":"http-get",
      "command": "http://$DeviceURI:$DevicePort/api/v2/", 
      "queryresult" : "$.device",
      "evalwrite":[
        {"variable":"NewDevice", "value":"DYNAMIK let device = $NewDevice; device.model_name = JSON.parse(\"$Result\").modelName; device.mac = JSON.parse(\"$Result\").wifiMac; device.name = JSON.parse(\"$Result\").name; device.token_auth = JSON.parse(\"$Result\")?.TokenAuthSupport; device.port = device.token_auth ? \"8002\" : \"8001\"; JSON.stringify(device); "},
        {"variable":"MyDevices", "value":"DYNAMIK let device = $NewDevice; let mydevices = $MyDevices; (device.model_name != undefined ? ((mydevices.findIndex(i=>i.ip==device.ip)==-1) ? mydevices.push(device) : mydevices) : mydevices); JSON.stringify(mydevices); "}
      ],
      "evaldo":[{"test":"DYNAMIK let device = $NewDevice; device.model_name != undefined","then":"__PERSIST", "or":""}
      ]
    }
  },
  "discover": {
    "welcomeheadertext": "Samsung smartTV (2016)",
    "welcomedescription": "powered by meta v2 \n by JAC459 \n X \n Driver Development \n by MarkusM",
    "initcommandset":[{
      "label":"", 
      "type":"static",
      "command":"$RegistrationCode",
      "queryresult":"",
      "evalwrite":[
        {"variable":"DeviceURI", "value":"DYNAMIK \"$Result\" "},
        {"variable":"NewDevice", "value":"DYNAMIK let device = {\"ip\":\"\", \"port\":\"\", \"mac\":\"\", \"model_name\":\"\", \"name\":\"\", \"token_auth\":false}; device.ip = \"$Result\"; JSON.stringify(device); "},
        {"variable":"CheckNew",  "value":"DYNAMIK let device = $NewDevice; let mydevices = $MyDevices; mydevices.findIndex(i=>i.ip==device.ip)==-1"}
      ],
      "evaldo":[{"test":"DYNAMIK let device = $NewDevice; let mydevices = $MyDevices; mydevices.findIndex(i=>i.ip==device.ip)==-1", "then":"__CHECK", "or":""}]
    }],
    "command": {"type": "static", "command": "$MyDevices", "queryresult": "$.*"}    
  },
  "template":{
    "name":"smartTV (2016)",
    "dynamicname":"DYNAMIK_INST_START DYNAMIK $CheckNew ? \"Please refresh list!\" : \"Samsung \" + JSON.parse(\"$Result\").model_name == \"0\" ? \"TV\" : JSON.parse(\"$Result\").model_name + \" (\" + JSON.parse(\"$Result\").ip + \") \" DYNAMIK_INST_END",
    "dynamicid":  "DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").ip DYNAMIK_INST_END",
    "variables":{
      "DeviceIP":     "DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").ip   DYNAMIK_INST_END",
      "DeviceMac":    "DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").mac  DYNAMIK_INST_END",
      "WsPort":       "DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").port DYNAMIK_INST_END",
      "WebSocketType":"DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").token_auth ? \"wss\" : \"ws\" DYNAMIK_INST_END",
      "RemoteName":  "meta Samsung SmartTV",
      "IconBaseUrl": "https://raw.githubusercontent.com/MarkusMas/meta-samsung-smartTV/master/icons",
      "PowerOnStatus":false,
      "CheckPowerSent":false,
      "IsConnected":false,
      "GotNewToken":false,
      "AsyncMessage":"",
      "AppIterator":0,
      "RequestedApps":false,
      "RunAppID":"",
      "Base64Icon":"undefined",
      "WriteIcon":"",
      "IconServerRoot":"icon_server",
      "IconServerDriverFolder":"samsung-smartTV",
      "IconServerPort":2016,
      "IconServerStatus":false,
      "ToRerrangeApps":"[]",
      "RearrangedApps":"[]",
      "RearrangeNavHelper":0
    },
    "persistedvariables":{
      "IconServerEnabled":true,
      "Apps":"[]",
      "ButtonMenuSwapped":true,
      "Token":"",
      "QueryString":"DYNAMIK_INST_START DYNAMIK let name = Buffer.from(\"meta Samsung SmartTV\").toString(\"Base64\"); \"?name=\"+name DYNAMIK_INST_END"
    },
    "listeners":{
      "SamsungListener": {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message": "message"}, "queryresult" : "",
        "evalwrite":[
          {"variable":"AsyncMessage","value":"DYNAMIK \"$Result\" "},
          {"variable":"IsConnected", "value":"DYNAMIK let res; if ($AsyncMessage.event == \"ms.channel.connect\") {res = $AsyncMessage.data; let name = Buffer.from(\"$RemoteName\").toString(\"Base64\"); res.clients.findIndex(i=>i.deviceName==name)!=-1} else {$IsConnected}"},
          {"variable":"GotNewToken", "value":"DYNAMIK let res; if ($AsyncMessage.event == \"ms.channel.connect\" && 'token' in $AsyncMessage.data) {res = $AsyncMessage.data; res.token != \"$Token\"} else {false}"},
          {"variable":"Token",       "value":"DYNAMIK let res; if ($AsyncMessage.event == \"ms.channel.connect\" && 'token' in $AsyncMessage.data) {res = $AsyncMessage.data; res.token} else {$Token}"},
          {"variable":"QueryString", "value":"DYNAMIK let res; if ($AsyncMessage.event == \"ms.channel.connect\" && 'token' in $AsyncMessage.data) {res = $AsyncMessage.data; let name = Buffer.from(\"$RemoteName\").toString(\"Base64\"); \"?name=\"+name + \"&token=\"+res.token} else {\"$QueryString\"}"},
          {"variable":"Apps",        "value":"DYNAMIK let res; if ($AsyncMessage.event == \"ed.installedApp.get\") {res = $AsyncMessage.data; let NewApps = res.data; let OldApps = $Apps; let sortedApps = OldApps.filter(oldApp => NewApps.some(newApp => newApp.appId === oldApp.appId)).map(oldApp => NewApps.find(newApp => newApp.appId === oldApp.appId));/*console.log('Sorted Apps:', '\\n', sortedApps);*/ NewApps = sortedApps.concat(NewApps.filter(newApp => !OldApps.find(oldApp => oldApp.appId === newApp.appId)));/*console.log('New Apps:', '\\n', NewApps);*/ let mergedApps = NewApps.map(newApp => ({...newApp, visible: OldApps.find(oldApp => oldApp.appId === newApp.appId)?.visible ?? true}));console.log('Merged Apps:', '\\n', mergedApps); res=JSON.stringify(mergedApps)} else {res=JSON.stringify($Apps)}; res; "},
          {"variable":"Base64Icon",  "value":"DYNAMIK let res; if ($AsyncMessage.event == \"ed.apps.icon\") {res = $AsyncMessage.data; res=res.imageBase64; res=JSON.stringify(res)} else {res = \"undefined\"}; res;"},
          {"variable":"WriteIcon",   "value":"DYNAMIK const fs = require(\"fs\"); if ($AsyncMessage.event == \"ed.apps.icon\") {let AppId = ''; let IconPathSplit = $AsyncMessage.data.iconPath.split('/'); if (IconPathSplit[IconPathSplit.length -2]=='LocalIcon') {AppId = IconPathSplit[IconPathSplit.length -1].split('.').slice(0,-1).join('.')} else {AppId = IconPathSplit[IconPathSplit.length -2]}; let AppIterator = $Apps.findIndex(i => i.appId === AppId); let icon = $Base64Icon; let path = \"$IconServerRoot\/$IconServerDriverFolder\/$DeviceIP\/\"; const buffer = Buffer.from(icon, \"base64\"); fs.mkdirSync(path, {recursive:true}); fs.writeFileSync(path + $Apps[Number(AppIterator)].name.replace(/\\s/g, \"_\").replace(/–/g, \"-\") + \".png\", buffer); \"Icon saved: #\" + Number(AppIterator) + \" \" + $Apps[Number(AppIterator)].name.replace(/\\s/g, \"_\").replace(/–/g, \"-\") + \".png\"} else {\"No Icon saved\"} "},
          {"variable":"AppIterator", "value":"DYNAMIK ($AsyncMessage.event == \"ed.apps.icon\") ? Number($AppIterator)+1 : $AppIterator"}
        ],
        "evaldo":[
          {"test":"DYNAMIK $GotNewToken","then":"__PERSIST", "or":""},
          {"test":"DYNAMIK $GotNewToken","then":"__INITIALISE", "or":""},
          {"test":"DYNAMIK $CheckPowerSent == false && $IsConnected == true && \"$WebSocketType\" != \"ws\" ","then":"__PREPCHECKPWR", "or":""},
          {"test":"DYNAMIK $RequestedApps  == false && $IsConnected == true && \"$WebSocketType\" == \"ws\" ","then":"__GETAPPS", "or":""},
          {"test":"DYNAMIK if (($IconServerEnabled == false || $RequestedApps == false) && \"$WebSocketType\" == \"ws\") {false} else {let apps = $Apps; let bol = Number($AppIterator) <  apps.length; bol}","then":"__GETB64ICON", "or":""},
          {"test":"DYNAMIK if (($IconServerStatus == true   || $Apps.length   == 0    ) && \"$WebSocketType\" != \"ws\") {false} else {let apps = $Apps; let bol = Number($AppIterator) == apps.length; bol}","then":"__CHECKICONSERVER", "or":""}
        ]
      }
    },
    "buttons":{
      "POWER ON":       {"label":"", "type":"wol", "command":"$DeviceMac", "evaldo":[{"test":true, "then":"__INITIALISE", "or":""}]},
      "__PREPCHECKPWR": {"label":"", "type":"static", "command":"", "evalwrite":[{"variable":"CheckPowerSent", "value":true}], "evaldo":[{"test":true, "then":"__CHECKPWR", "or":""}]},
      "__CHECKPWR":     {"type":"http-get", "command":"http://$DeviceIP:$DevicePort/api/v2/", "queryresult":"$.device", "evalwrite":[{"variable":"PowerOnStatus", "value":"DYNAMIK JSON.parse(\"$Result\").PowerState"}], "evaldo":[{"test":"DYNAMIK \"$PowerOnStatus\" == \"standby\" ", "then":"__SENDPWRON", "or":""}]},
      "__SENDPWRON":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_POWER", "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}},

      "POWER OFF":      {"type":"http-get", "command":"http://$DeviceIP:$DevicePort/api/v2/", "queryresult":"$.device", "evalwrite":[{"variable":"PowerOnStatus", "value":"DYNAMIK if (\"$WebSocketType\" == \"ws\") {\"$Result\" != \"undefined\" ? true : false} else {\"Result\" != \"undefined\" ? JSON.parse(\"$Result\").PowerState : false} "},{"variable":"AppIterator", "value":0},{"variable":"RequestedApps", "value":false},{"variable":"IsConnected", "value":false},{"variable":"CheckPowerSent", "value":false}], "evaldo":[{"test":"DYNAMIK if (\"$WebSocketType\" == \"ws\") {\"$PowerOnStatus\" == \"true\"} else {\"$PowerOnStatus\" == \"on\"} ", "then":"__SENDPWROFF", "or":"__CLEANUP"}]},
      "__SENDPWROFF":   {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_POWER", "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":true, "then":"__CLEANUP", "or":""}]},

      "__GETAPPS":      {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit",   "params":{"event": "ed.installedApp.get", "to":"host"}}}, "evalwrite":[{"variable":"RequestedApps", "value":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {false} else {true}"}], "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__GETB64ICON":   {"type":"webSocket", "command":"DYNAMIK let req = {\"connection\":\"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString\", \"message\":{\"method\":\"ms.channel.emit\", \"params\":{\"event\":\"ed.apps.icon\", \"to\":\"host\", \"data\":{\"iconPath\":$Apps[$AppIterator].icon} }}}; req " },
      "__CHECKICONSERVER":{"type":"http-get", "command":"http://localhost:$IconServerPort/", "queryresult":"", "evalwrite":[{"variable":"IconServerStatus", "value":"DYNAMIK \"$Result\" == \"Not found\" ? true : false "}], "evaldo":[{"test":"DYNAMIK $IconServerStatus == false && $IconServerEnabled == true && \"$WebSocketType\" == \"ws\" ", "then":"__RUNICONSERVER", "or":""},{"test":true, "then":"__PERSIST", "or":""}]},
      "__RUNICONSERVER":{"type":"static", "command":"DYNAMIK const path = require('path'); const http = require('http'); const fs = require('fs'); const host = '0.0.0.0'; const port = $IconServerPort; const mime = {jpg: 'image/jpeg', png: 'image/png',}; var server = http.createServer((req, res) => {var file = path.join(__dirname, '$IconServerRoot', req.url); var type = mime[path.extname(file).slice(1)] || 'text/plain'; var s = fs.createReadStream(file); s.on('open', () => {res.setHeader('Content-Type', type); s.pipe(res);}); s.on('error', () => {res.setHeader('Content-Type', 'text/plain'); res.response_code = 404; res.end('Not found');});}); server.listen(port, host, () => {console.log('Icon Server running at http://localhost:'+port);}); " },
      "__REMOVEICONS":  {"type":"cli", "command":"DYNAMIK \"rm $IconServerRoot/$IconServerDriverFolder/$DeviceIP -r\" "},

      "CURSOR UP":      {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_UP",       "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "CURSOR DOWN":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_DOWN",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "CURSOR LEFT":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_LEFT",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "CURSOR RIGHT":   {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_RIGHT",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "CURSOR ENTER":   {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_ENTER",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },

      "BACK":           {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_RETURN",   "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "MENU":           {"type":"webSocket", "command":"DYNAMIK let req = {\"connection\":\"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString\", \"message\":{\"method\":\"ms.remote.control\", \"params\":{\"Cmd\":\"Click\", \"DataOfCmd\": ($ButtonMenuSwapped ? \"KEY_GUIDE\" : \"KEY_HOME\"), \"Option\":\"false\", \"TypeOfRemote\":\"SendRemoteKey\" }}}; req", "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "GUIDE":          {"type":"webSocket", "command":"DYNAMIK let req = {\"connection\":\"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString\", \"message\":{\"method\":\"ms.remote.control\", \"params\":{\"Cmd\":\"Click\", \"DataOfCmd\": ($ButtonMenuSwapped ? \"KEY_HOME\" : \"KEY_GUIDE\"), \"Option\":\"false\", \"TypeOfRemote\":\"SendRemoteKey\" }}}; req", "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INFO":           {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_INFO",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },

      "VOLUME UP":      {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_VOLUP",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "VOLUME DOWN":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_VOLDOWN",  "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "MUTE TOGGLE":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_MUTE",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },

      "CHANNEL UP":     {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_CHUP",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "CHANNEL DOWN":   {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_CHDOWN",   "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "CHANNEL LIST":   {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_CH_LIST",  "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "CHANNEL PRE":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_PRECH",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "CHANNEL FAV":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_FAVCH",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },

      "PLAY":           {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_PLAY",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "PAUSE":          {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_PAUSE",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "STOP":           {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_STOP",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "FORWARD":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_FF",       "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "REVERSE":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_REWIND",   "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "RECORD":         {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_REC",      "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "LIVE":           {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_LIVE",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },

      "DIGIT 1":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_1",        "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "DIGIT 2":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_2",        "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "DIGIT 3":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_3",        "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "DIGIT 4":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_4",        "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "DIGIT 5":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_5",        "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "DIGIT 6":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_6",        "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "DIGIT 7":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_7",        "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "DIGIT 8":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_8",        "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "DIGIT 9":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_9",        "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "DIGIT 0":        {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_0",        "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },

      "FUNCTION RED":   {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_RED",      "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "FUNCTION GREEN": {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_GREEN",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "FUNCTION YELLOW":{"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_YELLOW",   "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "FUNCTION BLUE":  {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_BLUE",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },

      "SOURCE":         {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_SOURCE",   "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INPUT TV":       {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_TV",       "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INPUT DTV":      {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_DTV",      "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INPUT AV1":      {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_AV1",      "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INPUT AV2":      {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_AV2",      "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INPUT AV3":      {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_AV3",      "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INPUT HDMI":     {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_HDMI",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INPUT HDMI1":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_HDMI1",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INPUT HDMI2":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_HDMI2",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INPUT HDMI3":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_HDMI3",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "INPUT HDMI4":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_HDMI4",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },

      "MODE":           {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_PMODE",    "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "MODE PANORAMA":  {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_PANORAMA", "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "MODE DYNAMIC":   {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_DYNAMIC",  "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "MODE STANDARD":  {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_STANDARD", "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "MODE MOVIE":     {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_MOVIE1",   "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "MODE GAME":      {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_GAME",     "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "MODE CUSTOM":    {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.remote.control", "params":{"Cmd":"Click", "DataOfCmd":"KEY_CUSTOM",   "Option":"false", "TypeOfRemote":"SendRemoteKey"}}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },

      "ARD Mediathek":   {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__ARD Mediathek_WS"   ,"or":"__ARD Mediathek_POST"   }]},
      "Disney+":         {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__Disney+_WS"         ,"or":"__Disney+_POST"         }]},
      "Joyn":            {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__Joyn_WS"            ,"or":"__Joyn_POST"            }]},
      "maxdome":         {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__maxdome_WS"         ,"or":"__maxdome_POST"         }]},
      "Netflix":         {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__Netflix_WS"         ,"or":"__Netflix_POST"         }]},
      "Philips Hue Sync":{"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__Philips Hue Sync_WS","or":"__Philips Hue Sync_POST"}]},
      "PLEX":            {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__PLEX_WS"            ,"or":"__PLEX_POST"            }]},
      "Prime Video":     {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__Prime Video_WS"     ,"or":"__Prime Video_POST"     }]},
      "Rakuten TV":      {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__Rakuten TV_WS"      ,"or":"__Rakuten TV_POST"      }]},
      "Smart STB":       {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__Smart STB_WS"       ,"or":"__Smart STB_POST"       }]},
      "Spotify":         {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__Spotify_WS"         ,"or":"__Spotify_POST"         }]},
      "Web Browser":     {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__Web Browser_WS"     ,"or":"__Web Browser_POST"     }]},
      "YOUTUBE":         {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__YOUTUBE_WS"         ,"or":"__YOUTUBE_POST"         }]},
      "ZDF Mediathek":   {"type":"static", "command":"","evaldo":[{"test":"DYNAMIK \"$WebSocketType\" == \"ws\"","then":"__ZDF Mediathek_WS"   ,"or":"__ZDF Mediathek_POST"   }]},

      "__ARD Mediathek_WS":   {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3201412000679",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__Disney+_WS":         {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3201901017640",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__Joyn_WS":            {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3201502001386",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__maxdome_WS":         {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3201803015887",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__Netflix_WS":         {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"11101200001",       "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__Philips Hue Sync_WS":{"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3202205027312",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__PLEX_WS":            {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3201512006963",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__Prime Video_WS":     {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3201512006785",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__Rakuten TV_WS":      {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3201511006428",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__Smart STB_WS":       {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3201606009761",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__Spotify_WS":         {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3201606009684",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__Web Browser_WS":     {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"org.tizen.browser", "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__YOUTUBE_WS":         {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"111299001912",      "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },
      "__ZDF Mediathek_WS":   {"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"3201705012365",     "metaTag":""} }}}, "evaldo":[{"test":"DYNAMIK if (JSON.parse(\"$Result\").readystate!=1) {true} else {false}","then":"__INITIALISE", "or":""}] },

      "__ARD Mediathek_POST":   {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201412000679" } },
      "__Disney+_POST":         {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201901017640" } },
      "__Joyn_POST":            {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201502001386" } },
      "__maxdome_POST":         {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201803015887" } },
      "__Netflix_POST":         {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201907018807" } },
      "__Philips Hue Sync_POST":{"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3202205027312" } },
      "__PLEX_POST":            {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201512006963" } },
      "__Prime Video_POST":     {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201512006785" } },
      "__Rakuten TV_POST":      {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201511006428" } },
      "__Smart STB_POST":       {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201606009761" } },
      "__Spotify_POST":         {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201606009684" } },
      "__Web Browser_POST":     {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3202010022079" } },
      "__YOUTUBE_POST":         {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/111299001912"  } },
      "__ZDF Mediathek_POST":   {"type":"http-rest", "command": {"verb": "post", "call": "http://$DeviceIP:$DevicePort/api/v2/applications/3201705012365" } }
    },
    "directories":{
      "Apps": {"label":"","feeders": {
        "Apps": {"label":"", "commandset":[{
          "type":"static", "command": "DYNAMIK \"$WebSocketType\" == \"ws\" ? $Apps.filter(i=>i.visible==true) : [{\"name\":\"App list not available for this TV\",\"label\":\"Launch apps using dedicated UI buttons\"}] ",
          "queryresult":"$.*",
          "itemname":   "DYNAMIK JSON.parse(\"$Result\").name",
          "itemlabel":  "DYNAMIK \"$WebSocketType\" == \"ws\" ? \"\" : JSON.parse(\"$Result\").label",
          "itemimage":  "DYNAMIK if ($IconServerEnabled && \"$WebSocketType\" == \"ws\") {\"http://$MetaIP:$IconServerPort/$IconServerDriverFolder/$DeviceIP/\" + JSON.parse(\"$Result\").name.replace(/\\s/g, \"_\").replace(/–/g, \"-\") + \".png\"} else {false}",
          "itemUI":     "close",
          "itemaction": "DYNAMIK \"$WebSocketType\" == \"ws\" ? \"RunApp\" : \"\"",
          "evalwrite":[{"variable": "RunAppID", "value":"DYNAMIK JSON.parse(\"$Result\").appId"}]
        }]},
        "RunApp": {"label":"", "commandset": [{"type":"webSocket", "command":{"connection":"$WebSocketType://$DeviceIP:$WsPort/api/v2/channels/samsung.remote.control$QueryString", "message":{"method":"ms.channel.emit", "params":{"event":"ed.apps.launch", "to":"host", "data":{"action_type":"DEEP_LINK", "appId":"$RunAppID", "metaTag":""} }}} }]}
      }},
      "Settings": {"label":"","feeders": {
        "Settings":{"label":"", "commandset": [{
          "type":"static", "command":"{}", "itemtype":"tile", "itemaction":"", "itemimage":"DYNAMIK (\"$IconBaseUrl/samsung-smartTV.png\").replace(/ /g, \"%20\")"
          },{
          "type":"static", "command":[
            {"name":"Apps",                "label":"Customize the app list",      "image":"list",                "navigation":"Apps"},
            {"name":"Remote Button: Menu", "label":"Customize short/ long press", "image":"remote_button_press", "navigation":"Menu Button"}
          ],
            "queryresult":"$.*",
            "itemname":   "DYNAMIK JSON.parse(\"$Result\").name",
            "itemlabel":  "DYNAMIK JSON.parse(\"$Result\").label",
            "itemimage":  "DYNAMIK (\"$IconBaseUrl/\" + JSON.parse(\"$Result\").image + \".png\").replace(/ /g, \"%20\")",
            "itemUI":     "reload",
            "evalnext":[
              {"test":"DYNAMIK (JSON.parse(\"$Result\").navigation == \"Apps\")", "then":"Apps", "or":""},
              {"test":"DYNAMIK (JSON.parse(\"$Result\").navigation == \"Menu Button\")", "then":"Menu Button", "or":""}
            ]   
          }
        ]},
        "Apps":{"label":"", "commandset": [{
          "type":"static", "command":"DYNAMIK \"$WebSocketType\" == \"ws\" ? [{\"name\":\"Run Icon Server\",\"label\":\"Enable or disable icon server\",\"image\":\"server\",\"navigation\":\"Run Icon Server\"},{\"name\":\"Hide Apps\",\"label\":\"Hide individual apps\",\"image\":\"list_x\",\"navigation\":\"Hide Apps\"},{\"name\":\"Rearrange Apps\",\"label\":\"Rearrange order of the apps\",\"image\":\"list_arrow_up_down\",\"navigation\":\"Rearrange Apps\"}] : [{\"name\":\"App list not available for this TV\",\"label\":\"Settings unavailable\",\"navigation\":\"undefined\"}] ",
            "queryresult":"$.*",
            "itemname":   "DYNAMIK JSON.parse(\"$Result\").name",
            "itemlabel":  "DYNAMIK JSON.parse(\"$Result\").label",
            "itemimage":  "DYNAMIK \"$WebSocketType\" == \"ws\" ? (\"$IconBaseUrl/\" + JSON.parse(\"$Result\").image + \".png\").replace(/ /g, \"%20\") : false",
            "itemUI":     "DYNAMIK \"$WebSocketType\" == \"ws\" ? \"reload\" : \"goBack\" ",
            "itemaction": "DYNAMIK \"$WebSocketType\" == \"ws\" ? undefined : \".\" ",
            "evalnext":[
              {"test":"DYNAMIK (JSON.parse(\"$Result\").navigation == \"Run Icon Server\")", "then":"Run Icon Server", "or":""},
              {"test":"DYNAMIK (JSON.parse(\"$Result\").navigation == \"Hide Apps\")",       "then":"Hide Apps",       "or":""},
              {"test":"DYNAMIK (JSON.parse(\"$Result\").navigation == \"Rearrange Apps\")",  "then":"Rearrange Apps",  "or":""}
            ]      
          }
        ]},
        "Run Icon Server":{"label":"", "commandset": [{
          "type":"static", "command":".", 
            "itemtype":"info",
            "itemname":"Click here for more Info :",
            "itemlabel":"A local http server is created to host the app icons at: http://$MetaIP:$IconServerPort. This option can disable the server. But then no more icons are displayed in the app list!"
          },{
          "type":"static", "command":".",
            "itemname":"Run Icon Server",
            "itemlabel":"Enable or disable icon server",
            "itemimage":"DYNAMIK (\"$IconBaseUrl\"+\"/check_\" + ($IconServerEnabled?\"on.png\":\"off.png\") ).replace(/ /g, \"%20\") ",
            "itemaction":"PersistAndManageIcons",
            "itemUI":"reload",
            "evalwrite":[
              {"variable":"IconServerEnabled", "value":"DYNAMIK $IconServerEnabled?false:true"},
              {"variable":"AppIterator", "value":0}
            ]
          },{
          "type":"static", "command":".",
            "itemtype":"button",
            "itemname":"Restart meta to apply disabling!",
            "itemUI":true,
            "itemaction":""}
        ]},
        "Hide Apps":{"label":"", "commandset": [{
          "type":"static", "command":".",
            "itemtype":"info",
            "itemname":"Click here for more Info :",
            "itemlabel":"Set check mark to display or hide apps in the app list."
          },{
          "type":"static", "command":"$Apps",
            "queryresult":"$.*",
            "itemname":"DYNAMIK JSON.parse(\"$Result\").name",
            "itemlabel":"",
            "itemimage":"DYNAMIK (\"$IconBaseUrl\"+\"/check_\" + (JSON.parse(\"$Result\").visible ?\"on.png\":\"off.png\") ).replace(/ /g, \"%20\") ",
            "itemaction":"Persist",
            "itemUI":"reload",
            "evalwrite":[
              {"variable":"Apps", "value":"DYNAMIK let Apps = $Apps; let visible = $Apps[$ListIndex-1].visible; Apps[$ListIndex-1].visible=(visible==true?false:true); Apps=JSON.stringify(Apps); Apps;"}
            ]
          }
        ]},
        "Rearrange Apps":{"label":"", "commandset": [{
          "type":"static", "command":".",
            "itemtype":"info",
            "itemname":"Click here for more Info :",
            "itemlabel":"This process can be used to rearrage the order of the apps in the app list. The app that is selected first will be at the top."
          },{
          "type":"static", "command":".", 
            "itemname":"Start rearranging App List",
            "itemimage":false,
            "itemaction":"",
            "evalwrite":[
              {"variable": "ToRerrangeApps", "value":"$Apps.filter(i=>i.visible==true)"},
              {"variable": "RearrangedApps", "value":"[]"},
              {"variable": "RearrangeNavHelper", "value":0}
            ],
            "evalnext":[{"test":true, "then":"Rearrange", "or":""}]
          }
        ]},
        "Rearrange":{"label":"", "commandset": [{
          "type":"static", "command":".", 
            "itemname":   "Back",
            "itemimage":  "DYNAMIK (\"$IconBaseUrl/list_back.png\").replace(/ /g, \"%20\")",
            "itemaction": "",
            "evalwrite":[
              {"variable":"ToRerrangeApps", "value":"DYNAMIK let RearrangedApps = $RearrangedApps; let ToRerrangeApps = $ToRerrangeApps; if ($RearrangedApps.length == 0) {} else {ToRerrangeApps.unshift(RearrangedApps[RearrangedApps.length-1])}; ToRerrangeApps=JSON.stringify(ToRerrangeApps); ToRerrangeApps;"},
              {"variable":"RearrangedApps", "value":"DYNAMIK let RearrangedApps = $RearrangedApps; RearrangedApps.pop(); RearrangedApps=JSON.stringify(RearrangedApps); RearrangedApps;"},
              {"variable":"RearrangeNavHelper", "value":"DYNAMIK $RearrangeNavHelper - 1 "}
            ],
            "evalnext":[{"test":"DYNAMIK $RearrangeNavHelper < 0", "then":"Rearrange Apps", "or":"Rearrange"}]
          },{
          "type":"static", "command":"DYNAMIK if ($RearrangedApps.length == $Apps.filter(i=>i.visible==true).length) {[{\"name\":\"Save the selected order!\"}]} else {$ToRerrangeApps}",
            "queryresult":"$.*",
            "itemname":"DYNAMIK JSON.parse(\"$Result\").name",
            "itemlabel":"",
            "itemimage": "DYNAMIK if ($IconServerEnabled) {\"http://$MetaIP:$IconServerPort/$IconServerDriverFolder/$DeviceIP/\" + JSON.parse(\"$Result\").name.replace(/\\s/g, \"_\").replace(/–/g, \"-\") + \".png\"} else {false}",
            "itemaction":"DYNAMIK $RearrangedApps.length == $Apps.filter(i=>i.visible==true).length ? \"Persist\" : undefined",
            "itemUI":"DYNAMIK $RearrangedApps.length == $Apps.filter(i=>i.visible==true).length ? \"close\" : \"reload\" ",
            "evalwrite":[
              {"variable":"Apps", "value":"DYNAMIK let Apps = $Apps; if ($RearrangedApps.length == $Apps.filter(i=>i.visible==true).length) {Apps = $RearrangedApps.concat($Apps.filter(newApp => !$RearrangedApps.find(remApp => remApp.appId === newApp.appId)));} else {}; Apps=JSON.stringify(Apps); Apps;"},
              {"variable":"RearrangedApps", "value":"DYNAMIK let ToRerrangeApps = $ToRerrangeApps; let RearrangedApps = $RearrangedApps; RearrangedApps.push(ToRerrangeApps[$ListIndex-1]); RearrangedApps=JSON.stringify(RearrangedApps); RearrangedApps;"},
              {"variable":"ToRerrangeApps", "value":"DYNAMIK let ToRerrangeApps = $ToRerrangeApps; ToRerrangeApps.splice($ListIndex-1, 1) ; ToRerrangeApps=JSON.stringify(ToRerrangeApps); ToRerrangeApps;"},
              {"variable":"RearrangeNavHelper", "value":"DYNAMIK $RearrangeNavHelper + 1 "}
            ]
          }
        ]},
        "Menu Button":{"label":"", "commandset": [{
          "type":"static", "command":".",
            "itemtype":"info",
            "itemname":"Click here for more Info :",
            "itemlabel":"Change the behavior of short/ long press of the menu button on the remote. This swaps the functions between \"Guide\" and \"SmartHub\"."
          },{
          "type":"static", "command":[
            {"name":"Short press: Guide",   "label":"Long press: SmartHub","ButtonMenuSwapped":false},
            {"name":"Short press: SmartHub","label":"Long press: Guide",   "ButtonMenuSwapped":true}],
            "queryresult":"$.*",
            "itemname":  "DYNAMIK JSON.parse(\"$Result\").name",
            "itemlabel": "DYNAMIK JSON.parse(\"$Result\").label",
            "itemimage": "DYNAMIK (\"$IconBaseUrl\"+\"/radio_button_\" + (JSON.parse(\"$Result\").ButtonMenuSwapped==$ButtonMenuSwapped ? \"on.png\" : \"off.png\") ).replace(/ /g, \"%20\") ",
            "itemaction":"Persist",
            "itemUI":    "reload",
            "evalwrite":[
              {"variable":"ButtonMenuSwapped", "value":"DYNAMIK $ButtonMenuSwapped?false:true"}
            ]
          }
        ]},
        "Persist":{"label":"", "commandset": [
          {"type":"static", "command":".", "evaldo":[{"test":true, "then":"__PERSIST", "or":""}]}
        ]},
        "PersistAndManageIcons":{"label":"", "commandset": [
          {"type":"static", "command":".", "evaldo":[{"test":true, "then":"__PERSIST", "or":""},{"test":"DYNAMIK $IconServerEnabled && \"$WebSocketType\" == \"ws\"", "then":"__GETB64ICON", "or":"__REMOVEICONS"}]}
        ]}
      }}  
    }
  }
}